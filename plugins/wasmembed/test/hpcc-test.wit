package hpcc-systems:hpcc-platform;

world hpcc-test {
/*  imports  ---

    guests dispose all params as needed
    guests should dispose "results" as needed
*/
  import dbglog: func(msg: string);

/*  exports  ---

    guests dispose all params as needed
    hosts call cabi_post_XXX to dispose "results" as needed
*/
  export bool-and: func(a: bool, b: bool) -> bool;
  export bool-or: func(a: bool, b: bool) -> bool;
  export f32-add: func(a: f32, b: f32) -> f32;
  export f64-add: func(a: f64, b: f64) -> f64;
  export u8-add: func(a: u8, b: u8) -> u8;
  export u16-add: func(a: u16, b: u16) -> u16;
  export u32-add: func(a: u32, b: u32) -> u32;
  export u64-add: func(a: u64, b: u64) -> u64;
  export s8-add: func(a: s8, b: s8) -> s8;
  export s16-add: func(a: s16, b: s16) -> s16;
  export s32-add: func(a: s32, b: s32) -> s32;
  export s64-add: func(a: s64, b: s64) -> s64;

  export utf8-string-append: func(a: string, b: string) -> string;

  export list-generate-bool: func() -> list<bool>;
  export list-reverse-bool: func(a: list<bool>) -> list<bool>;

  export list-generate-u32: func() -> list<u32>;
  export list-reverse-u32: func(a: list<u32>) -> list<u32>;

  export list-generate-f32: func() -> list<f32>;
  export list-reverse-f32: func(a: list<f32>) -> list<f32>;

  export list-generate-string: func() -> list<string>;
  export list-reverse-string: func(a: list<string>) -> list<string>;

  export list-generate-list-string: func() -> list<list<string>>;
  // export list-list-test-list: func(a: list<list<string>>) -> list<list<string>>
}
