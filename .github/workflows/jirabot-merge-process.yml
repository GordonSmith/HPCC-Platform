# JiraBot - Process Merge (Privileged)  
name: jirabot-merge-process

on:
  workflow_run:
    workflows: ["jirabot-merge"]
    types:
      - completed

permissions:
  contents: read
  pull-requests: write

jobs:
  jirabot:
    runs-on: ubuntu-latest
    if: >
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success'
    steps:
      - name: "Checkout base branch"
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
          fetch-depth: 0
          fetch-tags: true
          
      - name: "Download PR Info"
        uses: actions/github-script@v7
        with:
          script: |
            var artifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "pr-merge-info"
            })[0];
            if (!matchArtifact) {
              core.setFailed('pr-merge-info artifact not found');
              return;
            }
            var download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/pr-info.zip', Buffer.from(download.data));
            
      - name: "Extract PR Info"
        run: |
          unzip pr-info.zip
          # Use delimiter to prevent injection attacks
          {
            echo "PR_NUMBER<<EOF"
            cat number
            echo "EOF"
            echo "PR_TITLE<<EOF"
            cat title
            echo "EOF"
            echo "PR_AUTHOR<<EOF"
            cat author
            echo "EOF"
            echo "PR_URL<<EOF"
            cat url
            echo "EOF"
            echo "PR_COMMENTS_URL<<EOF"
            cat comments_url
            echo "EOF"
            echo "BRANCH_NAME<<EOF"
            cat branch_name
            echo "EOF"
          } >> $GITHUB_ENV
          
      - uses: "actions/setup-python@v5"
        with:
          python-version: "3.8"
          
      - name: "Install dependencies"
        run: |
          set -xe
          python -VV
          python -m site
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install --upgrade atlassian-python-api requests
          python -m pip install --upgrade jira
          
      - name: "Run Jirabot Merge Script"
        env:
          JIRABOT_USERNAME: ${{ secrets.JIRABOT_USERNAME }}
          JIRABOT_PASSWORD: ${{ secrets.JIRABOT_PASSWORD }}
          JIRA_URL: ${{ vars.JIRA_URL }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PROJECT_CONFIG: ${{ vars.PROJECT_CONFIG}}
        run: python .github/scripts/jirabot-merge.py
        shell: bash
